class linkedlist
   Node head;
   class Node{
       String data;
       Node next;
       Node prev;
       Node curr;
       Node(String data){
            this.data=data;
            this.next=null;
            this.prev=null;
            this.prev=null;
            }
       }
       public void reverseiterate(){
              if(had==null||head.next==null){
                  return;
                  }
                 
              Node prevNode=head;
              Node currNode=head.next;
             while(currNode!=null){
                 Node currNode=currNode.next;
                 currentNode.next=prev;
                 //update
                 prevNode=currNode;
                 currNode=nextNode;
                 }
                 //recursive way of reversing
                 public void recursiveReverse(Node head){
                 if(head==null||head.next==null){
                    return head;
                    }
                     Node newHead=recursiveReverse(head.next);
                     head.next.next=head;
                     head.next=null;
                     return newHead;
                     }
                     //collections method
                     LinkedList<Integer> list=new LinkedList<>();
                     list.add(2);
                     list.add(4);
                     Collections.reverse(list);
                      public static void main(String args[]){
        linkedlist ll=new linkedlist();
        ll.reverseiterate();//iterative way of reversing
        
